# -*- coding: utf-8 -*-
"""hotel_dashboard.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HABGVLsbxj5iTjxfhS2-dAM45_-fB6Qj
"""

# Install dependencies
!pip install streamlit plotly pandas numpy

# Install pyngrok untuk tunneling (agar bisa diakses dari luar)
!pip install pyngrok

# Setup ngrok (daftar gratis di ngrok.com untuk mendapat authtoken)
from pyngrok import ngrok
import threading
import time

# Set your ngrok authtoken (daftar di ngrok.com)
ngrok.set_auth_token("YOUR_NGROK_TOKEN")  # Ganti dengan token Anda

# Commented out IPython magic to ensure Python compatibility.
# %%writefile hotel_dashboard.py
# import streamlit as st
# import pandas as pd
# import plotly.express as px
# import plotly.graph_objects as go
# import numpy as np
# 
# # Konfigurasi halaman
# st.set_page_config(
#     page_title="Hotel Booking Dashboard",
#     layout="wide",
#     initial_sidebar_state="expanded"
# )
# 
# # Custom CSS untuk styling
# st.markdown("""
# <style>
#     .main-header {
#         font-size: 2.5rem;
#         font-weight: bold;
#         color: #2E86AB;
#         text-align: center;
#         margin-bottom: 2rem;
#     }
#     .section-header {
#         font-size: 1.8rem;
#         font-weight: bold;
#         color: #A23B72;
#         margin: 1.5rem 0 1rem 0;
#     }
# </style>
# """, unsafe_allow_html=True)
# 
# @st.cache_data
# def load_data():
#     # Load your CSV file
#     try:
#         df = pd.read_csv('hotel_clean.csv')
#         return df
#     except:
#         # Sample data jika file tidak ada
#         np.random.seed(42)
# 
#         months = ['January', 'February', 'March', 'April', 'May', 'June',
#                   'July', 'August', 'September', 'October', 'November', 'December']
# 
#         countries = ['PRT', 'GBR', 'FRA', 'ESP', 'DEU', 'ITA', 'IRL', 'BEL', 'BRA', 'NLD']
# 
#         market_segments = ['Online TA', 'Offline TA/TO', 'Groups', 'Direct', 'Corporate',
#                           'Complementary', 'Aviation', 'Undefined']
# 
#         hotels = ['Sheraton Lima Hotel & Convention Center Lima, Peru',
#                   'Renaissance New York Times Square Hotel New York, NY',
#                   'Orlando Airport Courtyard Orlando, FL',
#                   'Waves, Barbados Barbados',
#                   'Protea Hotel Fire & Ice! by Marriott Cape Town Cape Town, South Africa']
# 
#         n_records = 83006
#         data = {
#             'hotel': np.random.choice(hotels, n_records),
#             'is_canceled': np.random.choice([0, 1], n_records, p=[0.63, 0.37]),
#             'arrival_date_month': np.random.choice(months, n_records),
#             'country': np.random.choice(countries, n_records,
#                                       p=[0.4, 0.1, 0.087, 0.105, 0.061, 0.031, 0.028, 0.02, 0.019, 0.017]),
#             'market_segment': np.random.choice(market_segments, n_records,
#                                              p=[0.47, 0.20, 0.17, 0.10, 0.044, 0.006, 0.002, 0.0001]),
#             'adr': np.random.normal(100, 50, n_records),
#             'total_of_special_requests': np.random.choice([0, 1, 2, 3, 4, 5], n_records,
#                                                         p=[0.59, 0.39, 0.088, 0.033, 0.004, 0.0001]),
#             'total_guests': np.random.choice([1, 2, 3, 4, 5, 6], n_records,
#                                            p=[0.19, 0.69, 0.088, 0.033, 0.001, 0.00001]),
#             'price_category': np.random.choice(['Budget', 'Standard', 'Premium'], n_records,
#                                              p=[0.31, 0.55, 0.14])
#         }
# 
#         df = pd.DataFrame(data)
#         df['adr'] = np.abs(df['adr'])
#         return df
# 
# def create_monthly_booking_chart(df):
#     monthly_stats = df.groupby('arrival_date_month').agg({
#         'hotel': 'count',
#         'adr': 'mean'
#     }).round(1)
# 
#     month_order = ['January', 'February', 'March', 'April', 'May', 'June',
#                    'July', 'August', 'September', 'October', 'November', 'December']
#     monthly_stats = monthly_stats.reindex(month_order)
# 
#     fig = px.bar(
#         x=monthly_stats.index,
#         y=monthly_stats['hotel'],
#         title='Monthly Booking Volume',
#         labels={'x': 'Month', 'y': 'Number of Bookings'},
#         color=monthly_stats['hotel'],
#         color_continuous_scale='Blues'
#     )
# 
#     fig.update_layout(showlegend=False, height=400, title_x=0.5)
#     return fig, monthly_stats
# 
# def main():
#     st.markdown('<h1 class="main-header">Hotel Booking Analytics Dashboard</h1>',
#                 unsafe_allow_html=True)
# 
#     # Load data
#     with st.spinner('Loading data...'):
#         df = load_data()
# 
#     # Overview metrics
#     col1, col2, col3, col4 = st.columns(4)
# 
#     with col1:
#         st.metric("Total Bookings", f"{len(df):,}")
# 
#     with col2:
#         cancellation_rate = (df['is_canceled'].mean() * 100)
#         st.metric("Cancellation Rate", f"{cancellation_rate:.1f}%")
# 
#     with col3:
#         avg_adr = df['adr'].mean()
#         st.metric("Average ADR", f"${avg_adr:.2f}")
# 
#     with col4:
#         unique_countries = df['country'].nunique()
#         st.metric("Countries", f"{unique_countries}")
# 
#     # Monthly booking analysis
#     st.markdown('<h2 class="section-header">Peningkatan Pendapatan</h2>',
#                 unsafe_allow_html=True)
# 
#     col1, col2 = st.columns([2, 1])
# 
#     with col1:
#         st.subheader("Bulan mana yang paling ramai")
#         monthly_fig, monthly_stats = create_monthly_booking_chart(df)
#         st.plotly_chart(monthly_fig, use_container_width=True)
# 
#     with col2:
#         st.subheader("Top 5 Months")
#         top_months = monthly_stats.nlargest(5, 'hotel')
#         for idx, (month, data) in enumerate(top_months.iterrows(), 1):
#             st.write(f"{idx}. **{month}** - {data['hotel']:,} bookings")
# 
# if __name__ == "__main__":
#     main()